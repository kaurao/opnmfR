// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// arma_opnmf
Rcpp::List opnmfR_opnmfRcpp(const arma::mat & X, const arma::mat & W0, double tol, int maxiter, double eps, bool memsave);
RcppExport SEXP _opnmfR_opnmfR_opnmfRcpp(SEXP XSEXP, SEXP W0SEXP, SEXP tolSEXP, SEXP maxiterSEXP, SEXP epsSEXP, SEXP memsaveSEXP) {
  BEGIN_RCPP
  Rcpp::RObject rcpp_result_gen;
  Rcpp::RNGScope rcpp_rngScope_gen;
  Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
  Rcpp::traits::input_parameter< const arma::mat& >::type W0(W0SEXP);
  Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
  Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
  Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
  Rcpp::traits::input_parameter< bool >::type memsave(memsaveSEXP);
  rcpp_result_gen = Rcpp::wrap(opnmfR_opnmfRcpp(X, W0, tol, maxiter, eps, memsave));
  return rcpp_result_gen;
  END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_opnmfR_opnmfR_opnmfRcpp", (DL_FUNC) &_opnmfR_opnmfR_opnmfRcpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_opnmfR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
