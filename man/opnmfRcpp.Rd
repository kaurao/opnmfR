% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/opnmfR.R
\name{opnmfRcpp}
\alias{opnmfRcpp}
\title{Orthogonal Projective Non-Negative Factorization
utilising R C++ integration for improved computational speed. 
Implementation is partly based on brainparts: https://github.com/asotiras/brainparts}
\usage{
opnmfRcpp(
  X,
  r,
  W0 = NULL,
  max.iter = 50000,
  tol = 1e-05,
  memsave = TRUE,
  eps = 1e-16,
  ...
)
}
\arguments{
\item{X}{A matrix, rows are the number of features and columns are number of samples}

\item{r}{A number, rank used for factorization.}

\item{W0}{A string or matrix for initialization (default NULL)}

\item{max.iter}{A number, number of iterations before stopping (default 50000)}

\item{tol}{A number, convergence tolerance (default 1e-5)}

\item{memsave}{A logical, if TRUE update rule is modified to better deal with high
dimensional data (default TRUE)}

\item{eps}{A number, (default 1e-16)}
}
\value{
A list containing the approximation matrices W and H, of input matrix
X; the interation number at which a solution was found; 
the reconstruction error
}
\description{
Orthogonal Projective Non-Negative Factorization
utilising R C++ integration for improved computational speed. 
Implementation is partly based on brainparts: https://github.com/asotiras/brainparts
}
\examples{
 result <- opnmfRcpp()
}
